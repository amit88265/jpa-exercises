# Questions

> To make this exercise work, rename 13-persistence.xml to persistence.xml
> Drop the existing database and recreate the database

```
drop database jpaex;
create database jpaex;
use jpaex;
```

1. How many tables are created when you run `ElementCollectionApp.java`? What is the structure of generated tables?
2. What will happen if Employee can have only one item? i.e. rather than List<Item> we have Item.
3. How can you ensure tables created for Item and NickNames are named `items` and `nick_names`?
4. How can you ensure tables created for Item and NickNames have primary key with name `emp_id` instead of `Employee_id`?
5. Are items and nickNames fetched lazily?

#Answer
1.  4 Tables are created viz.
   a.employees: id , name
   b.Employee_items:Employee_id,name,price
   c.Employee_nickNames:Employee_id,nickNames

2.In that case item will be inserted in employees table with attribute name and price.

3.Add this line to Employee.java
    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name ="items")
    private List<Item> items;

    @ElementCollection
    @CollectionTable(name = "nick_names")
    private Set<String> nickNames;

4.Add this line to Employee.java
        @ElementCollection(fetch = FetchType.LAZY)
        @CollectionTable(name ="items",joinColumns = @JoinColumn(name="emp_id"))
        private List<Item> items;

        @ElementCollection
        @CollectionTable(name = "nick_names",joinColumns = @JoinColumn(name="emp_id"))
        private Set<String> nickNames;

 5. todo: do it tomorrow