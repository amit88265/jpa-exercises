# Questions

> To make this exercise work, rename 11-persistence.xml to persistence.xml

1. How can you fix the code so that no exception  is thrown?
2. Once you fix the exception, explain why two `SELECT` queries are fired between `Finding Employee` and `Found Employee`? Can you reduce it to one?
3. What table structure got created?
4. Who is the owning side and who is the inverse side?
5. How many SQL queries will be fired if you find department?
6. What will happen if you remove `mappedBy` attribute Department.java?

#Answer
1.Add this line to fix this code
employee.setDepartment(department) in OneToManyApp.java.

2.It was because of this line :
System.out.println(foundEmployee);
remove this line and select query reduce to one;

3.Three tables:
   a.Departments  :  id and name
   b. Employees: id name salary department_id
   c.hibernate_sequence

4.Employee is owning side and Department is inverse side

5.    0

6. It is bidirectional till now but a new table *departments_employees* will be created when it is removed.
